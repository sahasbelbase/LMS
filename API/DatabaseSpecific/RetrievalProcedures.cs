//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using SD.LLBLGen.Pro.ORMSupportClasses;
using SD.LLBLGen.Pro.QuerySpec.Adapter;

namespace LMS.LLBL.DatabaseSpecific
{
	/// <summary>Class which contains the static logic to execute retrieval stored procedures in the database.</summary>
	public static partial class RetrievalProcedures
	{

		/// <summary>Calls stored procedure 'SpBookSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBookSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpBookSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpBookSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBookSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpBookSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBookSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBookSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpBookSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBookSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBookSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpBookSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpBorrowSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBorrowSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpBorrowSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpBorrowSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBorrowSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpBorrowSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBorrowSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBorrowSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpBorrowSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBorrowSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBorrowSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpBorrowSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpCustomerMembershipSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpCustomerMembershipSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpCustomerMembershipSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpCustomerMembershipSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpCustomerMembershipSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpCustomerMembershipSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpCustomerMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpCustomerMembershipSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpCustomerMembershipSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpCustomerMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpCustomerMembershipSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpCustomerMembershipSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpCustomerNavigationSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpCustomerNavigationSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpCustomerNavigationSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpCustomerNavigationSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpCustomerNavigationSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpCustomerNavigationSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpCustomerNavigationSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpCustomerNavigationSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpCustomerNavigationSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpCustomerNavigationSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpCustomerNavigationSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpCustomerNavigationSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpDashboard'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpDashboard(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpDashboard(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpDashboard'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpDashboard(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpDashboardCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpDashboard'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpDashboardCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpDashboardCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpDashboard'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpDashboardCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpDashboardCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpMembershipSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpMembershipSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpMembershipSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpMembershipSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpMembershipSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpMembershipSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpMembershipSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpMembershipSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpMembershipSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpMembershipSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpNavigationSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNavigationSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpNavigationSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpNavigationSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNavigationSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpNavigationSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNavigationSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNavigationSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpNavigationSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNavigationSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNavigationSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpNavigationSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpPaymentSel'.<br/><br/></summary>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpPaymentSel()
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpPaymentSel(dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpPaymentSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpPaymentSel(IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpPaymentSelCall(dataAccessProvider))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpPaymentSel'.</summary>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpPaymentSelCallAsQuery()
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpPaymentSelCallAsQuery(dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpPaymentSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpPaymentSelCallAsQuery(IDataAccessCore dataAccessProvider)
		{
			return CreateSpPaymentSelCall(dataAccessProvider).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpUserBookSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserBookSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpUserBookSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpUserBookSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserBookSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpUserBookSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserBookSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserBookSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpUserBookSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserBookSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserBookSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpUserBookSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpUserDashboard'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserDashboard(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpUserDashboard(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpUserDashboard'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserDashboard(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpUserDashboardCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserDashboard'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserDashboardCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpUserDashboardCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserDashboard'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserDashboardCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpUserDashboardCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpUserPaymentSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserPaymentSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpUserPaymentSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpUserPaymentSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserPaymentSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpUserPaymentSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserPaymentSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserPaymentSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpUserPaymentSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserPaymentSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserPaymentSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpUserPaymentSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpUserPersonSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserPersonSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpUserPersonSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpUserPersonSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserPersonSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpUserPersonSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserPersonSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserPersonSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpUserPersonSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserPersonSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserPersonSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpUserPersonSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpUserSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataSet with resultset(s) of stored procedure</returns>
		public static DataSet SpUserSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpUserSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpUserSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataSet with resultset(s) of stored procedure</returns>
		public static DataSet SpUserSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpUserSelCall(dataAccessProvider, json))
			{
				DataSet toReturn = call.FillDataSet();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpUserSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpUserSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Creates the call object for the call 'SpBookSel' to stored procedure 'SpBookSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpBookSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Sahas_LMS].[dbo].[SpBookSel]", "SpBookSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpBorrowSel' to stored procedure 'SpBorrowSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpBorrowSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Sahas_LMS].[dbo].[SpBorrowSel]", "SpBorrowSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpCustomerMembershipSel' to stored procedure 'SpCustomerMembershipSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpCustomerMembershipSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Sahas_LMS].[dbo].[SpCustomerMembershipSel]", "SpCustomerMembershipSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpCustomerNavigationSel' to stored procedure 'SpCustomerNavigationSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpCustomerNavigationSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Sahas_LMS].[dbo].[SpCustomerNavigationSel]", "SpCustomerNavigationSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpDashboard' to stored procedure 'SpDashboard'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpDashboardCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Sahas_LMS].[dbo].[SpDashboard]", "SpDashboard")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpMembershipSel' to stored procedure 'SpMembershipSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpMembershipSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Sahas_LMS].[dbo].[SpMembershipSel]", "SpMembershipSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpNavigationSel' to stored procedure 'SpNavigationSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpNavigationSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Sahas_LMS].[dbo].[SpNavigationSel]", "SpNavigationSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpPaymentSel' to stored procedure 'SpPaymentSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpPaymentSelCall(IDataAccessCore dataAccessProvider)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Sahas_LMS].[dbo].[SpPaymentSel]", "SpPaymentSel");
		}

		/// <summary>Creates the call object for the call 'SpUserBookSel' to stored procedure 'SpUserBookSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpUserBookSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Sahas_LMS].[dbo].[SpUserBookSel]", "SpUserBookSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpUserDashboard' to stored procedure 'SpUserDashboard'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpUserDashboardCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Sahas_LMS].[dbo].[SpUserDashboard]", "SpUserDashboard")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpUserPaymentSel' to stored procedure 'SpUserPaymentSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpUserPaymentSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Sahas_LMS].[dbo].[SpUserPaymentSel]", "SpUserPaymentSel")
							.AddParameter("@Json", "VarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpUserPersonSel' to stored procedure 'SpUserPersonSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpUserPersonSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Sahas_LMS].[dbo].[SpUserPersonSel]", "SpUserPersonSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpUserSel' to stored procedure 'SpUserSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpUserSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Sahas_LMS].[dbo].[SpUserSel]", "SpUserSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}


	}
}
